% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HermesData-methods.R
\name{filter}
\alias{filter}
\alias{filter,AnyHermesData-method}
\title{Filter \code{AnyHermesData} on Subset Passing Default QC Flags}
\usage{
filter(object, ...)

\S4method{filter}{AnyHermesData}(object, what = c("genes", "samples"))
}
\arguments{
\item{object}{(\code{AnyHermesData})\cr object to filter.}

\item{...}{additional arguments.}

\item{what}{(\code{character})\cr specify whether to apply the filter on \code{genes} and / or \code{samples}.}
}
\value{
The filtered \code{\link{AnyHermesData}} object.
}
\description{
\ifelse{html}{\out{<a href='https://www.tidyverse.org/lifecycle/#stable'><img src='figures/lifecycle-stable.svg' alt='Stable lifecycle'></a>}}{\strong{Stable}}

This filters a \code{\link{AnyHermesData}} object using the default QC flags. That is,
only genes without low expression (\code{LowExpressionFlag}) and samples
without low depth (\code{LowDepthFlag}) or technical failure (\code{TechnicalFailureFlag})
remain in the returned filtered object.
}
\note{
The internal implementation cannot use the \code{\link[=subset]{subset()}} method since that
requires non-standard evaluation of arguments.
}
\examples{
a <- HermesData(summarized_experiment)
dim(a)
# Filter genes and samples on default QC flags.
result <- filter(a)
dim(result)
# Filter only genes without low expression.
result <- filter(a, what = "genes")
# Filter only samples with low depth and technical failure.
result <- filter(a, what = "samples")
}
