% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalization.R
\name{normalize,AnyHermesData-method}
\alias{normalize,AnyHermesData-method}
\alias{normalize}
\title{Normalization of HermesData}
\usage{
\S4method{normalize}{AnyHermesData}(
  object,
  methods = c("cpm", "rpkm", "tpm", "voom"),
  control = control_normalize(),
  ...
)
}
\arguments{
\item{object}{(\code{AnyHermesData})\cr object to normalize.}

\item{methods}{(\code{character})\cr which normalization methods to use, see details.}

\item{control}{(named \code{list})\cr settings produced by \code{\link[=control_normalize]{control_normalize()}}.}

\item{...}{not used.}
}
\value{
The \link{AnyHermesData} object with additional assays containing the normalized counts.
The \code{control} is saved in the \code{metadata} of the object for future reference.
}
\description{
This method is normalizing the input \link{HermesData} according to one or more
specified normalization methods. The results are saved as assitional assays
in the object.
}
\details{
Possible normalization methods are:
\itemize{
\item \code{cpm}: Counts per Million (CPM). Separately by sample, the original counts of the genes
are divided by the library size of this sample, and multiplied by one million. This is the
appropriate normalization for between-sample comparisons.
\item \code{rpkm}: Reads per Kilobase of transcript per Million reads mapped (RPKM). Each gene count is
divided by the gene width (in kilobases) and then again divided by the library sizes of each
sample (in millions). This allows for within-sample comparisons, as it takes
into account the gene lengths - longer genes will always have more counts than shorter genes.
\item \code{tpm}: Transcripts per Million (TPM). This addresses the problem of RPKM being inconsistent
across samples (which can be seen that the sum of all RPKM values will vary from sample to
sample). Therefore here we divide the RPKM by the sum of all RPKM values for each sample,
and multiply by one million.
\item \code{voom}: VOOM normalization. This is essentially just a slight variation of CPM where
a \code{prior_count} of 0.5 is combined with \code{lib_sizes} increased by 1 for each sample. It is used
as a starting point for the corresponding differential expression analysis.
}
}
\examples{
a <- HermesData(summarized_experiment)

# By default, log values are used with a prior count of 1 added to original counts.
result <- normalize(a)
assayNames(result)
tpm <- assay(result, "tpm")
tpm[1:3, 1:3]

# We can also work on original scale.
result_orig <- normalize(a, control = control_normalize(log = FALSE))
tpm_orig <- assay(result_orig, "tpm")
tpm_orig[1:3, 1:3]
}
